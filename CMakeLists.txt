cmake_minimum_required(VERSION 3.20)
project(CppFiles)

set(CMAKE_CXX_STANDARD 14)

include_directories(.)

add_executable(CppFiles
#        "evm/easy.cpp"
#        "evm/cache.cpp"
#        "LOSH2021/heavy-light decomposition.cpp"
#        "LOSH2021/suff-mas.cpp"
#        "Yandex trainings 3.0/Beautiful_String.cpp"
#        A&DS/SegTree/RMQ.cpp
#        A&DS/SegTree/PermutationOnSeg.cpp
#        "Yandex trainings 3.0/ContestBackend_A.cpp"
#        "Yandex trainings 3.0/ContestBackend_B.cpp"
#        "Yandex trainings 3.0/ContestBackend_C.cpp"
#        "Yandex trainings 3.0/ContestBackend_D.cpp"
#        "Yandex trainings 3.0/ContestBackend_stupid_solve.cpp"
#        DMlabs/Test2.cpp
#        CppCourse/substring.cpp
#        DMlabs/Test3.cpp
#        CppCourse/matrix/main.cpp
#        CppCourse/matrix/matrix_practise.h
#        CppCourse/matrix/matrix.h
#        CppCourse/vector/test.cpp CppCourse/vector/vector.h
#        DMlabs/dm_lab_avt.cpp
#        CppCourse/bigint/big_integer.h CppCourse/bigint/big_integer.cpp
#        A&DS/lca/min-cost-lca.cpp
#        A&DS/lca/simple-lca.cpp A&DS/sparse-table/simple-sparse-table.cpp
#        A&DS/SegTree/mass-operations.cpp
#        A&DS/treap/treap-reverse.cpp
#        A&DS/treap/treap-kth-max.cpp
#        A&DS/treap/Swapper.cpp
#        A&DS/SegTree/RMQ_reverse.cpp
#        A&DS/SegTree/SegTree_2D.cpp
#        A&DS/SegTree/Fenwick.cpp
#        A&DS/dfs_mst/A.top_sort.cpp
#        A&DS/dfs_mst/B_bridges.cpp
#        A&DS/dfs_mst/C_articulation_points.cpp
#        A&DS/dfs_mst/D_edge_connectivity.cpp
#        A&DS/dfs_mst/E_point_connectivity.cpp
#        A&DS/dfs_mst/F_condensation.cpp
#        A&DS/dfs_mst/H_avia.cpp
#        A&DS/dfs_mst/I_MST_PRIM.cpp
#        A&DS/dfs_mst/J_MST_Kraskal.cpp
#        A&DS/dfs_mst/G_2SAT.cpp
#        A&DS/shortestPaths_gamesTheory/A_Floyd.cpp
#        A&DS/shortestPaths_gamesTheory/B_Deikstra.cpp
#        A&DS/shortestPaths_gamesTheory/C_NegCycle.cpp
#        A&DS/shortestPaths_gamesTheory/D_K_length_paths.cpp
#        A&DS/shortestPaths_gamesTheory/E_Ford_Bellman.cpp
#        A&DS/shortestPaths_gamesTheory/F_lost_kefir.cpp
#        DMlabs/2sem/A_gamil_cycle.cpp
#        DMlabs/2sem/B_gamil_cycle2.cpp
#        DMlabs/2sem/E_prufer_code.cpp
#        DMlabs/2sem/F_repair_tree_using_prufer_code.cpp
#        DMlabs/2sem/C_interactive.cpp
        DMlabs/2sem/D_tournir_gamil_cycle.cpp
#        A&DS/shortestPaths_gamesTheory/H_easy_game.cpp
        )
